{
  "enabled": true,
  "name": "Code Quality Analyzer",
  "description": "Monitors source code files for changes and analyzes modified code for potential improvements including code smells, design patterns, and best practices. Provides suggestions for enhancing readability, maintainability, and performance.",
  "version": "1",
  "when": {
    "type": "fileEdited",
    "patterns": [
      "app/**/*.ts",
      "app/**/*.tsx",
      "components/**/*.ts",
      "components/**/*.tsx",
      "hooks/**/*.ts",
      "hooks/**/*.tsx",
      "lib/**/*.ts",
      "utils/**/*.ts"
    ]
  },
  "then": {
    "type": "askAgent",
    "prompt": "Analyze the modified code in the changed files for potential improvements. Focus on:\n\n1. **Code Smells**: Identify any code smells like long functions, duplicate code, large classes, or complex conditionals\n2. **Design Patterns**: Suggest appropriate design patterns that could improve the code structure\n3. **Best Practices**: Check adherence to TypeScript/React best practices, proper error handling, and consistent naming conventions\n4. **Readability**: Evaluate code clarity, commenting, and documentation\n5. **Maintainability**: Assess code organization, modularity, and separation of concerns\n6. **Performance**: Identify potential performance optimizations, unnecessary re-renders, or inefficient algorithms\n\nProvide specific, actionable suggestions while maintaining the existing functionality. Include code examples where helpful and prioritize the most impactful improvements."
  }
}